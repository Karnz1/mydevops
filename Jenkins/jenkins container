#JENKINS CONTAINER WITH DOCKER , COMPOSE, PYTHON. (USED FOR Vog PROJECT)
FROM debian:stable-slim

USER root

# Install dependencies, Jenkins, Docker, and Python in a single layer
RUN apt update -y && \
    apt upgrade -y && \
    apt install -y \
    openjdk-17-jdk \
    curl \
    apt-transport-https \
    ca-certificates \
    software-properties-common \
    python3 \
    python3-pip && \
    # Install Jenkins
    curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null && \
    echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/" | tee /etc/apt/sources.list.d/jenkins.list > /dev/null && \
    apt update -y && \
    apt install -y jenkins && \
    # Install Docker
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt update -y && \
    apt install -y docker-ce docker-ce-cli containerd.io && \
    # Install Docker Compose
    curl -L "https://github.com/docker/compose/releases/download/v2.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
    chmod +x /usr/local/bin/docker-compose && \
    # Add Jenkins user to Docker group
    usermod -aG docker jenkins

# Use Jenkins in the foreground (instead of systemctl)
CMD ["java", "-jar", "/usr/share/jenkins/jenkins.war"]
